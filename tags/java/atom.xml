<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Keep Coding</title>
    <link>https://liujiacai.net/tags/java/</link>
    <description>Recent content in Java on Keep Coding</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 08 Aug 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://liujiacai.net/tags/java/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>实践总结：在 Java 中调用 Go 代码</title>
      <link>https://liujiacai.net/blog/2020/08/08/go-meet-java/</link>
      <pubDate>Sat, 08 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://liujiacai.net/blog/2020/08/08/go-meet-java/</guid>
      <description>在 Java 中调用 Go 的大致过程如下 1 go --&amp;gt; cgo --&amp;gt; jna --&amp;gt; java 整个过程要解决的问题主要两个： 数据类型在两种语言中如何转化 何时清理无用的数据 下面就围绕上述调用过程</description>
    </item>
    
    <item>
      <title>Java 垃圾回收权威指北</title>
      <link>https://liujiacai.net/blog/2019/01/09/java-gc-definitive-guide/</link>
      <pubDate>Wed, 09 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://liujiacai.net/blog/2019/01/09/java-gc-definitive-guide/</guid>
      <description>毫无疑问，GC（垃圾回收） 已经是现代编程语言标配，为了研究这个方向之前曾经写过四篇《深入浅出垃圾回收》博文来介绍其理论，之后也看了不少网络上</description>
    </item>
    
    <item>
      <title>Java 线程同步原理探析</title>
      <link>https://liujiacai.net/blog/2018/12/29/how-java-synchronizer-work/</link>
      <pubDate>Sat, 29 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://liujiacai.net/blog/2018/12/29/how-java-synchronizer-work/</guid>
      <description>现如今，服务器性能日益增长，并发（concurrency）编程已经“深入人心”，但由于冯诺依式计算机“指令存储，顺序执行”的特性，使得编写跨</description>
    </item>
    
    <item>
      <title>Java WeakHashMap 源码解析</title>
      <link>https://liujiacai.net/blog/2015/09/27/java-weakhashmap/</link>
      <pubDate>Sun, 27 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://liujiacai.net/blog/2015/09/27/java-weakhashmap/</guid>
      <description>前面把基于特定数据结构的Map介绍完了，它们分别利用了相应数据结构的特点来实现特殊的目的，像HashMap利用哈希表的快速插入、查找实现O(</description>
    </item>
    
    <item>
      <title>Java LinkedHashMap源码解析</title>
      <link>https://liujiacai.net/blog/2015/09/12/java-linkedhashmap/</link>
      <pubDate>Sat, 12 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://liujiacai.net/blog/2015/09/12/java-linkedhashmap/</guid>
      <description>上周把HashMap、TreeMap这两个Map体系中比较有代表性的类介绍完了，大家应该也能体会到，如果该类所对应的数据结构与算法掌握好了，</description>
    </item>
    
    <item>
      <title>Java TreeMap 源码解析</title>
      <link>https://liujiacai.net/blog/2015/09/04/java-treemap/</link>
      <pubDate>Fri, 04 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://liujiacai.net/blog/2015/09/04/java-treemap/</guid>
      <description>继上篇文章介绍完了HashMap，这篇文章开始介绍Map系列另一个比较重要的类TreeMap。 大家也许能感觉到，网络上介绍HashMap的文</description>
    </item>
    
    <item>
      <title>Java HashMap 源码解析</title>
      <link>https://liujiacai.net/blog/2015/09/03/java-hashmap/</link>
      <pubDate>Thu, 03 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://liujiacai.net/blog/2015/09/03/java-hashmap/</guid>
      <description>继上一篇文章Java集合框架综述后，今天正式开始分析具体集合类的代码，首先以既熟悉又陌生的HashMap开始。 本文源码分析基于Oracle JDK</description>
    </item>
    
    <item>
      <title>Java集合框架综述</title>
      <link>https://liujiacai.net/blog/2015/09/01/java-collection-overview/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://liujiacai.net/blog/2015/09/01/java-collection-overview/</guid>
      <description>最近被陆陆续续问了几遍HashMap的实现，回答的不好，打算复习复习JDK中的集合框架，并尝试分析其源码，这么做一方面是这些类非常实用，掌握</description>
    </item>
    
    <item>
      <title>JVM 的类初始化机制</title>
      <link>https://liujiacai.net/blog/2014/07/12/order-of-initialization-in-java/</link>
      <pubDate>Sat, 12 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://liujiacai.net/blog/2014/07/12/order-of-initialization-in-java/</guid>
      <description>更新日志 2014-07-12, 根据校招经验，完成初稿，很多地方没写清楚 2017-01-15，全部重写，增加 Load、Link、Initialization 过程与</description>
    </item>
    
    <item>
      <title>深入Java世界</title>
      <link>https://liujiacai.net/blog/2014/05/19/go-into-java-world/</link>
      <pubDate>Mon, 19 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://liujiacai.net/blog/2014/05/19/go-into-java-world/</guid>
      <description>&lt;p&gt;俗话说的好：不经一事，不长一智。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
